{
  "$default": "zh-CN",
  "zh-CN": {
    "common.fuzzy_matched": "无法解析 {target}。您想要输入的是不是 \"{source}\" ?",
    "common.custom_type_error": "自定义参数类型传入的不是类型而是 {target}, 这是有意而为之的吗?",
    "common.completion_arg": "下一个参数应当为：",
    "common.completion_node": "下一个输入可能是以下：",
    "lang.name_error": "{target} 不是合法的 Alconna 语言配置名称",
    "lang.type_error": "{target} 不是合法的 Alconna 语言配置类型",
    "cli.not_found": "没有找到指定的组件",
    "cli.command_not_found": "请先创建命令",
    "cli.command_matched": "你的命令解析成功了！\n解析结果是\n - 命令头部: {header}\n - 命令参数: {main_args}\n - 命令选项: {options}\n - 所有参数: {all_args}",
    "cli.command_not_matched": "你的命令解析失败了\n错误数据是: {data}\n错误信息是: {exception}",
    "cli.lang_type_set_success": "语言配置类型更改成功, 已经更改为 {type}",
    "cli.lang_type_set_failed": "语言配置类型更改失败",
    "node.name_error": "该指令的名字含有非法字符",
    "node.name_empty": "该指令的名字不能为空",
    "header.error": "命令头部 {target} 匹配失败",
    "subcommand.args_missing": "子命令 \"{name}\" 缺少必要参数",
    "action.length_error": "该 action 接受的参数个数必须与 Args 里的一致",
    "action.args_error": "{target} 的类型 与 Args 中 '{key}' 接受的类型 {source} 不一致",
    "action.args_not_same": "{target} 指定的消息元素类型不是 {source}",
    "action.args_empty": "{target} 的类型不能指定为 {source}",
    "analyser.filter_missing": "Analyser 的子类必须实现 filter_out 属性",
    "analyser.handle_null_message": "传入了一个无法获取文本的消息: {target}",
    "analyser.handle_unexpect_type": "传入的消息中有非法类型的元素 {target}",
    "analyser.param_unmatched": "参数 {target} 匹配失败",
    "analyser.param_missing": "你应当传入更多的参数来完成解析!",
    "args.name_error": "参数的名字只能是字符串",
    "args.name_empty": "该参数的指示名不能为空",
    "args.value_error": "{target} 的参数值不能为Empty",
    "args.duplicate_kwargs": "不能同时设置多个键值对可变参数",
    "args.duplicate_varargs": "不能同时设置多个非键值对可变参数",
    "args.exclude_mutable_args": "该选项不能与可变参数同时使用",
    "args.key_not_found": "参数 {name} 不存在",
    "args.missing": "参数 {key} 丢失",
    "args.key_missing": "{target} 缺少键. 你是不是忘了带上 '{key}=' ?",
    "shortcut.delete_success": "{target} 的快截指令: \"{shortcut}\" 删除成功",
    "shortcut.add_success": "{target} 的快截指令: \"{shortcut}\" 添加成功",
    "shortcut.recent_command_error": "历史记录对应的命令 {source} 与 本命令 {target} 不符合",
    "shortcut.no_recent_command": "获取历史记录失败",
    "types.supplier_params_error": "在 {origin} 构造方法里的 {target} 函数应该包含 0 或 1 个参数",
    "types.supplier_return_error": "{origin} 里 {target} 的提供函数应该返回 {source}",
    "types.supplier_missing": "你应当为 {origin} 里的 {target} 传入一个提供函数",
    "types.type_error": "不支持 {target}",
    "manager.undefined_command": "命令 {target} 不存在",
    "manager.incorrect_shortcut": "快捷命令 {target} 无法使用",
    "manager.undefined_shortcut": "快捷命令 {target} 不存在",
    "manager.target_command_error": "{shortcut} 的目标命令 {target} 错误",
    "manager.help_header": "# 当前可用的命令有:",
    "manager.help_pages": "第 {current}/{total} 页",
    "manager.help_footer": "# 输入'命令名 {help}' 查看特定命令的语法",
    "visitor.duplicate_option": "选项 {target} 已存在",
    "visitor.duplicate_subcommand": "子命令 {target} 已存在",
    "visitor.duplicate_suboption": "子命令的选项 {target} 已存在",
    "visitor.ambiguous_name": "名称 {target} 存在歧义, 请指定具体的选项或子命令",
    "arpamar.ambiguous_name": "名称 {target} 存在歧义\n请添加前缀 'options.' 或 'subcommands.'",
    "stub.key_error": "不支持 {target}",
    "duplication.stub_type_error": "{value} 不是一个合法的 Stub 子类",
    "behavior.exclude_matched": "{target} 与 {other} 不能同时存在",
    "behavior.cooldown_matched": "操作过于频繁",
    "construct.decorate_error": "该行为必须在 @xxx.command() 之后",
    "construct.function_name_error": "函数名不能以 '_' 开头",
    "builtin.option_help": "显示帮助信息",
    "builtin.option_shortcut": "设置快捷命令",
    "builtin.option_completion": "补全当前命令"
  },
  "en-US": {
    "common.fuzzy_matched": "{target} is not matched. Do you mean \"{source}\"?",
    "common.custom_type_error": "The custom parameter type {target} can't be a type.",
    "common.completion_arg": "suggest next arg:",
    "common.completion_node": "next input maybe:",
    "lang.name_error": "{target} is not a valid Alconna Lang Config name",
    "lang.type_error": "{target} is not a valid Alconna Lang Config type",
    "cli.not_found": "Cannot found the target component of Alconna",
    "cli.command_not_found": "Please create a command first",
    "cli.command_matched": "Your command is successfully matched!\nThe results:\n - Header: {header}\n - Command: {main_args}\n - Options: {options}\n - Arguments: {all_args}",
    "cli.command_not_matched": "Your command matched failed.\nError Data: {data}\nError Info: {exception}",
    "cli.lang_type_set_success": "The default language type is set to {type}",
    "cli.lang_type_set_failed": "The default language type set failed.",
    "node.name_error": "There is an invalid character in the name",
    "node.name_empty": "You cannot give a empty name",
    "header.error": "{target} dose not matched",
    "subcommand.args_missing": "subcommand \"{name}\" missed its args",
    "action.length_error": "The count of arguments of this action must same as the given Args",
    "action.args_error": "The type of {target} is not same as {source} of '{key}' in Args",
    "action.args_not_same": "The target type of {target} is not {source}",
    "action.args_empty": "The type of {target} cannot set to {source}",
    "analyser.filter_missing": "The subclass of class Analyser must define its filter_out",
    "analyser.handle_null_message": "You income a message without text: {target}",
    "analyser.handle_unexpect_type": "You income a message with invalid element: {target}",
    "analyser.param_unmatched": "Unmatched params: {target}",
    "analyser.param_missing": "You need more data to analyse!",
    "args.name_error": "Name of arg must be a string",
    "args.name_empty": "Name of arg cannot be empty",
    "args.value_error": "Value of {target} cannot be empty",
    "args.duplicate_kwargs": "You cannot set multiple kwargs at the same Args",
    "args.duplicate_varargs": "You cannot set multiple varargs at the same Args",
    "args.exclude_mutable_args": "This flag cannot be set when the Args is mutable",
    "args.key_not_found": "Arg {name} not exists",
    "args.missing": "param {key} is required",
    "args.key_missing": "{target} missing its key. Do you forget to add '{key}='?",
    "shortcut.delete_success": "Delete shortcut: \"{shortcut}\" for {target} successfully",
    "shortcut.add_success": "Add shortcut: \"{shortcut}\" for {target} successfully",
    "shortcut.recent_command_error": "command {target} is not same as recent message's command {source}",
    "shortcut.no_recent_command": "get recent message failed",
    "types.supplier_params_error": "{target} in {origin} init function should have 0 or 1 parameter",
    "types.supplier_return_error": "{target}'s supplier of {origin} must return {source}",
    "types.supplier_missing": "{target} in {origin} init function should give a supplier",
    "types.type_error": "{target} is not supported",
    "manager.undefined_command": "Command {target} is not defined",
    "manager.incorrect_shortcut": "Shortcut {target} cannot be used",
    "manager.undefined_shortcut": "Shortcut {target} is not defined",
    "manager.target_command_error": "The target command of {shortcut} is not {target}",
    "manager.help_header": "# Following commands are available:",
    "manager.help_pages": "Page {current} of {total}",
    "manager.help_footer": "# Invoke '$command {help}' to see syntax",
    "visitor.duplicate_option": "Option {target} is already exists",
    "visitor.duplicate_subcommand": "Subcommand {target} is already exists",
    "visitor.duplicate_suboption": "Option {target} of subcommand is already exists",
    "visitor.ambiguous_name": "Name called {target} is ambiguous, please specify the option or subcommand",
    "arpamar.ambiguous_name": "Name called  {target} is ambiguous\nplease add prefix 'options.' or 'subcommands.'",
    "stub.key_error": "{target} is not supported",
    "duplication.stub_type_error": "{value} is not a valid stub",
    "behavior.exclude_matched": "{target} and {other} cannot be both matched",
    "behavior.cooldown_matched": "Your action is too frequent",
    "construct.decorate_error": "This action must behind a @xxx.command()",
    "construct.function_name_error": "function name can not start with '_'",
    "builtin.option_help": "show the help information",
    "builtin.option_shortcut": "set a shortcut command",
    "builtin.option_completion": "give a next input suggestion of current command"
  }
}
